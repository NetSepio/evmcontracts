/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ErebrusManager,
  ErebrusManagerInterface,
} from "../ErebrusManager";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccessControlBadConfirmation",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "neededRole",
        type: "bytes32",
      },
    ],
    name: "AccessControlUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "EREBRUS_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "EREBRUS_OPERATOR_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPayoutAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getRoleMember",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleMemberCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isOperator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "callerConfirmation",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_payoutAddress",
        type: "address",
      },
    ],
    name: "setPayoutAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c0604052600e60809081526d22b932b1393ab9a6b0b730b3b2b960911b60a0526002906200002f90826200031f565b50604080518082019091526002815261454160f01b60208201526003906200005890826200031f565b503480156200006657600080fd5b506200008260008051602062000ed883398151915280620000ea565b620000ac60008051602062000ef883398151915260008051602062000ed8833981519152620000ea565b620000c760008051602062000ed88339815191523362000135565b50620000e360008051602062000ef88339815191523362000135565b50620003eb565b600082815260208190526040808220600101805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b60008062000144848462000172565b905080156200016957600084815260016020526040902062000167908462000220565b505b90505b92915050565b6000828152602081815260408083206001600160a01b038516845290915281205460ff1662000217576000838152602081815260408083206001600160a01b03861684529091529020805460ff19166001179055620001ce3390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45060016200016c565b5060006200016c565b600062000169836001600160a01b038416600081815260018301602052604081205462000217575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556200016c565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620002a557607f821691505b602082108103620002c657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200031a57600081815260208120601f850160051c81016020861015620002f55750805b601f850160051c820191505b81811015620003165782815560010162000301565b5050505b505050565b81516001600160401b038111156200033b576200033b6200027a565b62000353816200034c845462000290565b84620002cc565b602080601f8311600181146200038b5760008415620003725750858301515b600019600386901b1c1916600185901b17855562000316565b600085815260208120601f198616915b82811015620003bc578886015182559484019460019091019084016200039b565b5085821015620003db5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610add80620003fb6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80636e5cb382116100a2578063a217fddf11610071578063a217fddf14610271578063ca15c87314610279578063d547741f1461028c578063e554d2341461029f578063f7965d2f146102b057600080fd5b80636e5cb382146102045780639010d07c1461022b57806391d148541461025657806395d89b411461026957600080fd5b80632f2ff15d116100e95780632f2ff15d1461019c57806333ea51a8146101b157806336568abe146101c457806354fd4d50146101d75780636d70f7ae146101f157600080fd5b806301ffc9a71461011b57806306fdde0314610143578063248a9ca31461015857806324d7806c14610189575b600080fd5b61012e61012936600461090a565b6102d7565b60405190151581526020015b60405180910390f35b61014b610302565b60405161013a9190610934565b61017b610166366004610982565b60009081526020819052604090206001015490565b60405190815260200161013a565b61012e6101973660046109b7565b610390565b6101af6101aa3660046109d2565b6103bc565b005b6101af6101bf3660046109b7565b6103e7565b6101af6101d23660046109d2565b610493565b6101df600181565b60405160ff909116815260200161013a565b61012e6101ff3660046109b7565b6104cb565b61017b7f018fdd4bc2cc0ebfbd57d54b5f60ffb5a488b46241a4085c0d3df24be7cb23a581565b61023e6102393660046109fe565b6104f7565b6040516001600160a01b03909116815260200161013a565b61012e6102643660046109d2565b610516565b61014b61053f565b61017b600081565b61017b610287366004610982565b61054c565b6101af61029a3660046109d2565b610563565b6004546001600160a01b031661023e565b61017b7f05cdc8d41d20fd0a1e067743e8e98f1e4da37966ec380eca3a9f4195a95ad33981565b60006001600160e01b03198216635a05180f60e01b14806102fc57506102fc82610588565b92915050565b6002805461030f90610a20565b80601f016020809104026020016040519081016040528092919081815260200182805461033b90610a20565b80156103885780601f1061035d57610100808354040283529160200191610388565b820191906000526020600020905b81548152906001019060200180831161036b57829003601f168201915b505050505081565b60006102fc7f05cdc8d41d20fd0a1e067743e8e98f1e4da37966ec380eca3a9f4195a95ad33983610516565b6000828152602081905260409020600101546103d7816105bd565b6103e183836105ca565b50505050565b6104117f05cdc8d41d20fd0a1e067743e8e98f1e4da37966ec380eca3a9f4195a95ad33933610516565b6104715760405162461bcd60e51b815260206004820152602660248201527f457265627275734d616e616765723a2055736572206973206e6f7420617574686044820152651bdc9a5e995960d21b60648201526084015b60405180910390fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03811633146104bc5760405163334bd91960e11b815260040160405180910390fd5b6104c682826105ff565b505050565b60006102fc7f018fdd4bc2cc0ebfbd57d54b5f60ffb5a488b46241a4085c0d3df24be7cb23a583610516565b600082815260016020526040812061050f908361062c565b9392505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6003805461030f90610a20565b60008181526001602052604081206102fc90610638565b60008281526020819052604090206001015461057e816105bd565b6103e183836105ff565b60006001600160e01b03198216637965db0b60e01b14806102fc57506301ffc9a760e01b6001600160e01b03198316146102fc565b6105c78133610642565b50565b6000806105d7848461067f565b9050801561050f5760008481526001602052604090206105f79084610711565b509392505050565b60008061060c8484610726565b9050801561050f5760008481526001602052604090206105f79084610791565b600061050f83836107a6565b60006102fc825490565b61064c8282610516565b61067b5760405163e2517d3f60e01b81526001600160a01b038216600482015260248101839052604401610468565b5050565b600061068b8383610516565b610709576000838152602081815260408083206001600160a01b03861684529091529020805460ff191660011790556106c13390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45060016102fc565b5060006102fc565b600061050f836001600160a01b0384166107d0565b60006107328383610516565b15610709576000838152602081815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45060016102fc565b600061050f836001600160a01b038416610817565b60008260000182815481106107bd576107bd610a5a565b9060005260206000200154905092915050565b6000818152600183016020526040812054610709575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556102fc565b6000818152600183016020526040812054801561090057600061083b600183610a70565b855490915060009061084f90600190610a70565b90508082146108b457600086600001828154811061086f5761086f610a5a565b906000526020600020015490508087600001848154811061089257610892610a5a565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806108c5576108c5610a91565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506102fc565b60009150506102fc565b60006020828403121561091c57600080fd5b81356001600160e01b03198116811461050f57600080fd5b600060208083528351808285015260005b8181101561096157858101830151858201604001528201610945565b506000604082860101526040601f19601f8301168501019250505092915050565b60006020828403121561099457600080fd5b5035919050565b80356001600160a01b03811681146109b257600080fd5b919050565b6000602082840312156109c957600080fd5b61050f8261099b565b600080604083850312156109e557600080fd5b823591506109f56020840161099b565b90509250929050565b60008060408385031215610a1157600080fd5b50508035926020909101359150565b600181811c90821680610a3457607f821691505b602082108103610a5457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b818103818111156102fc57634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603160045260246000fdfea26469706673582212206f7086a3a9d42feb29fe10f1b3bfa2d1adc521ede444f70c467abb849b5aedb064736f6c6343000814003305cdc8d41d20fd0a1e067743e8e98f1e4da37966ec380eca3a9f4195a95ad339018fdd4bc2cc0ebfbd57d54b5f60ffb5a488b46241a4085c0d3df24be7cb23a5";

type ErebrusManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ErebrusManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ErebrusManager__factory extends ContractFactory {
  constructor(...args: ErebrusManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ErebrusManager";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ErebrusManager> {
    return super.deploy(overrides || {}) as Promise<ErebrusManager>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ErebrusManager {
    return super.attach(address) as ErebrusManager;
  }
  connect(signer: Signer): ErebrusManager__factory {
    return super.connect(signer) as ErebrusManager__factory;
  }
  static readonly contractName: "ErebrusManager";
  public readonly contractName: "ErebrusManager";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ErebrusManagerInterface {
    return new utils.Interface(_abi) as ErebrusManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ErebrusManager {
    return new Contract(address, _abi, signerOrProvider) as ErebrusManager;
  }
}

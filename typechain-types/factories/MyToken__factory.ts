/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MyToken, MyTokenInterface } from "../MyToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600781526020016626bcaa37b5b2b760c91b815250604051806040016040528060038152602001624d544b60e81b81525081600090816200005f91906200011c565b5060016200006e82826200011c565b505050620001e8565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000a257607f821691505b602082108103620000c357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200011757600081815260208120601f850160051c81016020861015620000f25750805b601f850160051c820191505b818110156200011357828155600101620000fe565b5050505b505050565b81516001600160401b0381111562000138576200013862000077565b62000150816200014984546200008d565b84620000c9565b602080601f8311600181146200018857600084156200016f5750858301515b600019600386901b1c1916600185901b17855562000113565b600085815260208120601f198616915b82811015620001b95788860151825594840194600190910190840162000198565b5085821015620001d85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610ffe80620001f86000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80636352211e11610097578063a22cb46511610066578063a22cb465146101f5578063b88d4fde14610208578063c87b56dd1461021b578063e985e9c51461022e57600080fd5b80636352211e146101b057806370a08231146101c357806375794a3c146101e457806395d89b41146101ed57600080fd5b8063095ea7b3116100d3578063095ea7b31461016257806323b872dd1461017757806340d097c31461018a57806342842e0e1461019d57600080fd5b806301ffc9a7146100fa57806306fdde0314610122578063081812fc14610137575b600080fd5b61010d610108366004610c47565b610241565b60405190151581526020015b60405180910390f35b61012a610293565b6040516101199190610cb4565b61014a610145366004610cc7565b610325565b6040516001600160a01b039091168152602001610119565b610175610170366004610cfc565b61034e565b005b610175610185366004610d26565b61035d565b610175610198366004610d62565b6103ed565b6101756101ab366004610d26565b61040f565b61014a6101be366004610cc7565b61042f565b6101d66101d1366004610d62565b61043a565b604051908152602001610119565b6101d660065481565b61012a610482565b610175610203366004610d7d565b610491565b610175610216366004610dcf565b61049c565b61012a610229366004610cc7565b6104b3565b61010d61023c366004610eab565b610528565b60006001600160e01b031982166380ac58cd60e01b148061027257506001600160e01b03198216635b5e139f60e01b145b8061028d57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546102a290610ede565b80601f01602080910402602001604051908101604052809291908181526020018280546102ce90610ede565b801561031b5780601f106102f05761010080835404028352916020019161031b565b820191906000526020600020905b8154815290600101906020018083116102fe57829003601f168201915b5050505050905090565b600061033082610556565b506000828152600460205260409020546001600160a01b031661028d565b61035982823361058f565b5050565b6001600160a01b03821661038c57604051633250574960e11b8152600060048201526024015b60405180910390fd5b600061039983833361059c565b9050836001600160a01b0316816001600160a01b0316146103e7576040516364283d7b60e01b81526001600160a01b0380861660048301526024820184905282166044820152606401610383565b50505050565b600680549060006103fd83610f18565b90915550506006546103598282610695565b61042a8383836040518060200160405280600081525061049c565b505050565b600061028d82610556565b60006001600160a01b038216610466576040516322718ad960e21b815260006004820152602401610383565b506001600160a01b031660009081526003602052604090205490565b6060600180546102a290610ede565b6103593383836106af565b6104a784848461035d565b6103e78484848461074e565b60606104be82610556565b5060006104d660408051602081019091526000815290565b905060008151116104f65760405180602001604052806000815250610521565b8061050084610877565b604051602001610511929190610f3f565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6000818152600260205260408120546001600160a01b03168061028d57604051637e27328960e01b815260048101849052602401610383565b61042a838383600161090a565b6000828152600260205260408120546001600160a01b03908116908316156105c9576105c9818486610a10565b6001600160a01b03811615610607576105e660008560008061090a565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b03851615610636576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b610359828260405180602001604052806000815250610a74565b6001600160a01b0382166106e157604051630b61174360e31b81526001600160a01b0383166004820152602401610383565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b156103e757604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610790903390889087908790600401610f6e565b6020604051808303816000875af19250505080156107cb575060408051601f3d908101601f191682019092526107c891810190610fab565b60015b610834573d8080156107f9576040519150601f19603f3d011682016040523d82523d6000602084013e6107fe565b606091505b50805160000361082c57604051633250574960e11b81526001600160a01b0385166004820152602401610383565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b1461087057604051633250574960e11b81526001600160a01b0385166004820152602401610383565b5050505050565b6060600061088483610a8b565b600101905060008167ffffffffffffffff8111156108a4576108a4610db9565b6040519080825280601f01601f1916602001820160405280156108ce576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846108d857509392505050565b808061091e57506001600160a01b03821615155b156109e057600061092e84610556565b90506001600160a01b0383161580159061095a5750826001600160a01b0316816001600160a01b031614155b801561096d575061096b8184610528565b155b156109965760405163a9fbf51f60e01b81526001600160a01b0384166004820152602401610383565b81156109de5783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b610a1b838383610b63565b61042a576001600160a01b038316610a4957604051637e27328960e01b815260048101829052602401610383565b60405163177e802f60e01b81526001600160a01b038316600482015260248101829052604401610383565b610a7e8383610bc9565b61042a600084848461074e565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610aca5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610af6576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610b1457662386f26fc10000830492506010015b6305f5e1008310610b2c576305f5e100830492506008015b6127108310610b4057612710830492506004015b60648310610b52576064830492506002015b600a831061028d5760010192915050565b60006001600160a01b03831615801590610bc15750826001600160a01b0316846001600160a01b03161480610b9d5750610b9d8484610528565b80610bc157506000828152600460205260409020546001600160a01b038481169116145b949350505050565b6001600160a01b038216610bf357604051633250574960e11b815260006004820152602401610383565b6000610c018383600061059c565b90506001600160a01b0381161561042a576040516339e3563760e11b815260006004820152602401610383565b6001600160e01b031981168114610c4457600080fd5b50565b600060208284031215610c5957600080fd5b813561052181610c2e565b60005b83811015610c7f578181015183820152602001610c67565b50506000910152565b60008151808452610ca0816020860160208601610c64565b601f01601f19169290920160200192915050565b6020815260006105216020830184610c88565b600060208284031215610cd957600080fd5b5035919050565b80356001600160a01b0381168114610cf757600080fd5b919050565b60008060408385031215610d0f57600080fd5b610d1883610ce0565b946020939093013593505050565b600080600060608486031215610d3b57600080fd5b610d4484610ce0565b9250610d5260208501610ce0565b9150604084013590509250925092565b600060208284031215610d7457600080fd5b61052182610ce0565b60008060408385031215610d9057600080fd5b610d9983610ce0565b915060208301358015158114610dae57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610de557600080fd5b610dee85610ce0565b9350610dfc60208601610ce0565b925060408501359150606085013567ffffffffffffffff80821115610e2057600080fd5b818701915087601f830112610e3457600080fd5b813581811115610e4657610e46610db9565b604051601f8201601f19908116603f01168101908382118183101715610e6e57610e6e610db9565b816040528281528a6020848701011115610e8757600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610ebe57600080fd5b610ec783610ce0565b9150610ed560208401610ce0565b90509250929050565b600181811c90821680610ef257607f821691505b602082108103610f1257634e487b7160e01b600052602260045260246000fd5b50919050565b600060018201610f3857634e487b7160e01b600052601160045260246000fd5b5060010190565b60008351610f51818460208801610c64565b835190830190610f65818360208801610c64565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090610fa190830184610c88565b9695505050505050565b600060208284031215610fbd57600080fd5b815161052181610c2e56fea26469706673582212203dee8648419613c4be8b39c6c7bc28944336a2b91b1a12ec3aa35286c60ba81d64736f6c63430008140033";

type MyTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyToken__factory extends ContractFactory {
  constructor(...args: MyTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MyToken";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MyToken> {
    return super.deploy(overrides || {}) as Promise<MyToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MyToken {
    return super.attach(address) as MyToken;
  }
  connect(signer: Signer): MyToken__factory {
    return super.connect(signer) as MyToken__factory;
  }
  static readonly contractName: "MyToken";
  public readonly contractName: "MyToken";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyTokenInterface {
    return new utils.Interface(_abi) as MyTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MyToken {
    return new Contract(address, _abi, signerOrProvider) as MyToken;
  }
}
